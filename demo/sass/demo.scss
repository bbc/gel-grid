$gel-grid-enable--markup-output: true;
$rtl: false;
// $gel-grid-breakpoints: (xs, s, m, l, xl);

/*------------------------------------*\
    # GEL DEMO
\*------------------------------------*/
@use 'gel-sass-tools/sass-tools';
@use 'gel-typography/typography' as type;
@use 'sass-mq/mq';
@use 'settings/global';

@use 'base/box-sizing';
@use 'base/normalize';
@use 'base/reset';
@use 'base/page';

@use '../../grid' with (
    $gel-grid-enable--markup-output: true,
    $gel-grid-breakpoints: (xs, s, m, l, xl),
);


@use 'object/button';

@use 'component/demo-header';
@use 'component/demo-controls';
@use 'component/grid-controls';
@use 'component/grid-demo';

@use 'utilities/float';

.gs-u-mt\+ {
    margin-top: 16px !important;
}

.gs-u-clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}


/**
  * NEW
  **/
.grid-header__heading {
    margin: 0 0 sass-tools.$gel-spacing-unit;

    @include type.gel-typography('canon-bold');
}

.grid-header__description {
    margin: 0;
    padding: 0;
}

.grid-masthead__intro {
    margin-bottom: 16px;
    margin-top: 16px;

    @include mq.mq($from: gel-bp-l) {
        margin-bottom: 32px;
        margin-top: 32px;
    }
}

/**
  *
  * CONTROLS
  *
  */
.grid-controls {
  background-color: global.$gel-color--orange;
  color: global.$gel-color--white;
  margin-left: -(sass-tools.$gel-spacing-unit);
  margin-right: -(sass-tools.$gel-spacing-unit);
  margin-top: 0;
  padding: sass-tools.$gel-spacing-unit;
  position: relative;

  @include mq.mq($from: gel-bp-s) {
      margin-left: sass-tools.double(-(sass-tools.$gel-spacing-unit));
      margin-right: sass-tools.double(-(sass-tools.$gel-spacing-unit));
      padding: sass-tools.double(sass-tools.$gel-spacing-unit);
  }

  @include mq.mq($from: gel-bp-l) {
      margin: 0 0 sass-tools.quadruple(sass-tools.$gel-spacing-unit);
  }
}

.grid-control__device {
  margin-bottom: sass-tools.$gel-spacing-unit;

  @include type.gel-typography('double-pica');
}

.grid-control__group {
  margin-bottom: 4px;

  @include type.gel-typography('great-primer');

  /**
    * Change the group name based on the current media-query
    */
  &:after {
    content: sass-tools.flip('Group 1 - Extra Small (0 - 399px)', 'Group 1 - Extra Small \200F(0 - 399px)');
  }
 
  @include mq.mq($from: gel-bp-s) {
    &:after {
      content: sass-tools.flip('Group 2 - Small (400px - 599px)', 'Group 2 - Small \200F(400px - 599px)');
    }
  }
 
  @include mq.mq($from: gel-bp-m) {
    &:after {
      content: sass-tools.flip('Group 3 - Medium (600px - 899px)', 'Group 3 - Medium \200F(600px - 899px)');
    }
  }
 
  @include mq.mq($from: gel-bp-l) {
    &:after {
      content: sass-tools.flip('Group 4 - Large (900px)', 'Group 4 - Large \200F(900px)');
    }
  }
 
  @include mq.mq($from: gel-bp-xl) {
    &:after {
      content: sass-tools.flip('Group 5 - Extra Large (1008px)', 'Group 5 - Extra Large \200F(1008px)');
    }
  }
 
  @include mq.mq($from: gel-bp-xxl) {
    &:after {
      content: sass-tools.flip('Group 6 - Extra Extra Large (1280px)', 'Group 6 - Extra Extra Large \200F(1280px)');
    }
  }
}

.grid-control__spacing {
  @include type.gel-typography('brevier');

  /**
    * Change the margin's and gutter's based on the breakpoint
    */
  &:after {
    content: 'Margins: 8px | Gutters: 8px';
  }

  @include mq.mq($from: gel-bp-s) {
    &:after {
      content: 'Margins: 16px | Gutters: 8px';
    }
  }

  @include mq.mq($from: gel-bp-m) {
    &:after {
      content: 'Margins: 16px | Gutters: 16px  |  For layouts a 900px breakpoint can also be used.';
    }
  }

  @include mq.mq($from: gel-bp-l) {
    &:after {
      content: 'Margins: 16px | Gutters: 16px';
    }
  }
}

.grid-control__options {
  margin-top: sass-tools.$gel-spacing-unit;

  @include type.gel-typography('brevier-bold');

  @include mq.mq($from: gel-bp-m) {
    margin-bottom: 0;
    position: absolute;
    bottom: sass-tools.double(sass-tools.$gel-spacing-unit);
    #{sass-tools.$right}: sass-tools.double(sass-tools.$gel-spacing-unit);
  }
}

.grid-control__option {
  background: none;
  border: 0;
  color: #fff;
  outline: 0;
  padding: 0;

  &:focus,
  &:hover {
    text-decoration: underline;
  }
}

.grid-control__option + .grid-control__option {
  #{sass-tools.$margin-left}: sass-tools.$gel-spacing-unit;
}


.gel-wrap {
  @include grid.gel-wrap();
}

.grid-examples {
  padding-bottom: sass-tools.double(sass-tools.$gel-spacing-unit);
}

.gel-layout {
  @include grid.gel-layout();
}

.gel-layout__item {
  @include grid.gel-layout-item();
}

.grid-heading {
  margin-bottom: sass-tools.double(sass-tools.$gel-spacing-unit);

  @include type.gel-typography('double-pica-bold');
}

.grid-section {
  border-top: 1px solid global.$gel-color--alto;
  margin-top: sass-tools.double(sass-tools.$gel-spacing-unit);
  padding-top: sass-tools.double(sass-tools.$gel-spacing-unit);
}

.grid-row {
  margin-top: 16px;

  @include grid.gel-layout();

  // A nested grid-row
  .grid-row {
    margin-top: 0;
  }
}

.grid-row__title {
  margin-bottom: 8px;

  @include type.gel-typography('pica');
}

.grid-row__summary {
  color: global.$gel-color--cod-gray;
  margin-top: sass-tools.halve(sass-tools.$gel-spacing-unit);

  @include type.gel-typography('brevier');
}


/**
 * A placeholder element to demostrate grid sizing
 */
 .grid-item {
  background-color: #d4e7eb;
  color: global.$gel-color--black;
  padding: sass-tools.$gel-spacing-unit;
  width: 100%;

  @include type.gel-typography('pica');

  @include mq.mq($from: gel-bp-s) {
    padding: sass-tools.double(sass-tools.$gel-spacing-unit);
  }

  &.grid-item {
    line-height: 18px;
  }
}

.grid-item--fill {
  background: repeating-linear-gradient(180deg, #d4e7eb, #d4e7eb 8px, #aec4cc 8px, #aec4cc 16px);
}

.grid-item--auto {
  height: auto;
}

.grid-item--large {
  height: 144px;
}

.grid-item__description {
  margin-bottom: 8px;

  @include type.gel-typography('pica');
}


// .grid-section > .gel-layout--equal {
//   margin-bottom: sass-tools.double(sass-tools.$gel-spacing-unit);
// }

@include grid.gel-output-grid();
